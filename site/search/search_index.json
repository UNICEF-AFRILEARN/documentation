{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"UNICEF-AI-Personalisation Some children learn best by watching videos, some by reading class notes, some by solving practice problems, and some by social collaboration. Beyond blending storytelling, social learning, and supplementary tech skills content, Afrilearn leverages artificial intelligence to give every child access to personalized learning using the unique method that works best for them. This can be solved using AI recommendation systems. The recommender system provides course recommendations based on user history and similar profiles. This repo is deployed as a web app and api through Heroku here . Installation Clone this repository. Navigate to the repository and create a python virtual environment through your method of choosing. Activate the environment and install the required libraries through git clone https://github.com/Afrilearn/UNICEF-AI-Personalisation.git cd UNICEF-AI-Personalisation python3 -m venv venv source venv/bin/activate pip install -r requirements.txt Architecture app.py --> templates/index.html --> recommender.py --> templates/results.html app.py opens the user interface for collecting student course levels, subjects and lessons. index.html is the user interface for collecting student course levels, subjects and lessons used in calling the machine learning recommender system. recommender.py loads pickle files containing the recommender system apriori rules and applies this in recommending similar lessons for students based on the student course levels, subjects and lessons. results.html displays the dataframe results in html. To use this app as an API, a POST reuquest can be sent directly to https://unicef-afrilearn-app.herokuapp.com/recommend with a json file containing student details for the school_level, subject and lesson. Dependencies The backend is developed in python 3.x.x. Other libraries and packages, along with their versions, are included in requirements.txt . In short, you need the following libraries and their dependencies. - pandas - numpy - flask_cors - flask - mlxtend Usage visit web app","title":"Home"},{"location":"#unicef-ai-personalisation","text":"Some children learn best by watching videos, some by reading class notes, some by solving practice problems, and some by social collaboration. Beyond blending storytelling, social learning, and supplementary tech skills content, Afrilearn leverages artificial intelligence to give every child access to personalized learning using the unique method that works best for them. This can be solved using AI recommendation systems. The recommender system provides course recommendations based on user history and similar profiles. This repo is deployed as a web app and api through Heroku here .","title":"UNICEF-AI-Personalisation"},{"location":"#installation","text":"Clone this repository. Navigate to the repository and create a python virtual environment through your method of choosing. Activate the environment and install the required libraries through git clone https://github.com/Afrilearn/UNICEF-AI-Personalisation.git cd UNICEF-AI-Personalisation python3 -m venv venv source venv/bin/activate pip install -r requirements.txt","title":"Installation"},{"location":"#architecture","text":"app.py --> templates/index.html --> recommender.py --> templates/results.html app.py opens the user interface for collecting student course levels, subjects and lessons. index.html is the user interface for collecting student course levels, subjects and lessons used in calling the machine learning recommender system. recommender.py loads pickle files containing the recommender system apriori rules and applies this in recommending similar lessons for students based on the student course levels, subjects and lessons. results.html displays the dataframe results in html. To use this app as an API, a POST reuquest can be sent directly to https://unicef-afrilearn-app.herokuapp.com/recommend with a json file containing student details for the school_level, subject and lesson.","title":"Architecture"},{"location":"#dependencies","text":"The backend is developed in python 3.x.x. Other libraries and packages, along with their versions, are included in requirements.txt . In short, you need the following libraries and their dependencies. - pandas - numpy - flask_cors - flask - mlxtend","title":"Dependencies"},{"location":"#usage","text":"visit web app","title":"Usage"},{"location":"charter/","text":"Afrilearn Project Charter Community Statement The educational landscape in Africa is in a coma with the high rate of out-ofschool children, over 50 percent failure in examinations and high cost of access to quality education. We created the Afrilearn platform for young people across Africa to access world-class education and excel by leveraging technology without the need to step foot into the four walls of a school. Our community is a crucible of expertise and collaboration amongst developers, tutors, animators, students and machine learning experts to ensure each student get the exact support, peculiar to their needs. Vision statement Become Africa\u2019s most loved e-learning brand delivering affordable and worldclass education to 300 million young people Africans, anywhere Mission statement We are committed to providing personalised affordable yet world-class education to Africans, anywhere.","title":"Project Charter"},{"location":"charter/#afrilearn-project-charter","text":"","title":"Afrilearn Project Charter"},{"location":"charter/#community-statement","text":"The educational landscape in Africa is in a coma with the high rate of out-ofschool children, over 50 percent failure in examinations and high cost of access to quality education. We created the Afrilearn platform for young people across Africa to access world-class education and excel by leveraging technology without the need to step foot into the four walls of a school. Our community is a crucible of expertise and collaboration amongst developers, tutors, animators, students and machine learning experts to ensure each student get the exact support, peculiar to their needs.","title":"Community Statement"},{"location":"charter/#vision-statement","text":"Become Africa\u2019s most loved e-learning brand delivering affordable and worldclass education to 300 million young people Africans, anywhere","title":"Vision statement"},{"location":"charter/#mission-statement","text":"We are committed to providing personalised affordable yet world-class education to Africans, anywhere.","title":"Mission statement"},{"location":"contributing/","text":"Contributing to Afrilearn First off, thank you for considering contributing to Afrilearn e-learning platform. It's people like you that make the Afrilearn e-learning platform such a great learning tool. We are glad to have you and we look forward to your exciting contributions here. Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests. Keep an open mind! Improving documentation, bug triaging, or writing tutorials are all examples of helpful contributions that mean less work for you. The Afrilearn e-learning platform is an open source project and we love to receive contributions from our community \u2014 you! There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into the Afrilearn e-learning platform itself. Code of conduct Responsibilities * Ensure cross-platform compatibility for every change that's accepted. Windows, Mac, Debian & Ubuntu Linux. * Create issues for any major changes and enhancements that you wish to make. Discuss things transparently and get community feedback. * Don't add any classes to the codebase unless absolutely needed. Err on the side of using functions. * Keep feature versions as small as possible, preferably one new feature per version. * Be welcoming to newcomers and encourage diverse new contributors from all backgrounds. See the Python Community Code of Conduct . Your First Contribution Unsure where to begin contributing to Atom? You can start by looking through these beginner and help-wanted issues: Beginner issues - issues which should only require a few lines of code, and a test or two. Help wanted issues - issues which should be a bit more involved than beginner issues. Both issue lists are sorted by total number of comments. While not perfect, number of comments is a reasonable proxy for impact a given change will have. Working on your first Pull Request? You can learn how from this free series, How to Contribute to an Open Source Project on GitHub . At this point, you're ready to make your changes! Feel free to ask for help; everyone is a beginner at first :smile_cat: If a maintainer asks you to \"rebase\" your PR, they're saying that a lot of code has changed, and that you need to update your branch so it's easier to merge. Getting started For something that is bigger than a one or two line fix: 1. Create your own fork of the code 2. Do the changes in your fork 3. If you like the change and think the project could use it: * Be sure you have followed the code style for the project. * Sign the Contributor License Agreement, CLA, with the jQuery Foundation. * Note the jQuery Foundation Code of Conduct. * Send a pull request indicating that you have a CLA on file. How to report a bug If you find a security vulnerability, do NOT open an issue. Email security@afrilearn.com instead. If you don\u2019t want to use your personal contact information, set up a \u201csecurity@\u201d email address. Larger projects might have more formal processes for disclosing security, including encrypted communication. (Disclosure: I am not a security expert.) Any security issues should be submitted directly to security@afrilearn.com In order to determine whether you are dealing with a security issue, ask yourself these two questions: * Can I access something that's not mine, or something I shouldn't have access to? * Can I disable something for other people? If the answer to either of those two questions are \"yes\", then you're probably dealing with a security issue. Note that even if you answer \"no\" to both questions, you may still be dealing with a security issue, so if you're unsure, just email us at security@afrilearn.com. When filing an issue, make sure to answer these five questions: What version of Go are you using (go version)? What operating system and processor architecture are you using? What did you do? What did you expect to see? What did you see instead? How to suggest a feature or enhancement Our philosophy is to cheap, easy, accessible and personalized learning to students across Africa. We are always looking to improve the user experience on our platform and make education more accessible. Feature enhancement suggestions to help us achieve this goal are welcome and highly appreciated. If you find yourself wishing for a feature that doesn't exist in the Afrilearn e-learning platform, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that Afrilearn e-learning platform has today have been added because our users saw the need. Open an issue on our issues list on GitHub which describes the feature you would like to see, why you need it, and how it should work. Code review process The core team looks at Pull Requests on a regular basis in a monthly triage meeting that we hold in a public Google Hangout. The hangout is announced in the monthly status updates that are sent to the slack list. Notes are posted to the Slack Community community-triage repo and include a link to a YouTube recording of the hangout. After feedback has been given we expect responses within two weeks. After two weeks we may close the pull request if it isn't showing any activity.","title":"Contributing"},{"location":"contributing/#contributing-to-afrilearn","text":"First off, thank you for considering contributing to Afrilearn e-learning platform. It's people like you that make the Afrilearn e-learning platform such a great learning tool. We are glad to have you and we look forward to your exciting contributions here. Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests. Keep an open mind! Improving documentation, bug triaging, or writing tutorials are all examples of helpful contributions that mean less work for you. The Afrilearn e-learning platform is an open source project and we love to receive contributions from our community \u2014 you! There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into the Afrilearn e-learning platform itself.","title":"Contributing to Afrilearn"},{"location":"contributing/#code-of-conduct","text":"Responsibilities * Ensure cross-platform compatibility for every change that's accepted. Windows, Mac, Debian & Ubuntu Linux. * Create issues for any major changes and enhancements that you wish to make. Discuss things transparently and get community feedback. * Don't add any classes to the codebase unless absolutely needed. Err on the side of using functions. * Keep feature versions as small as possible, preferably one new feature per version. * Be welcoming to newcomers and encourage diverse new contributors from all backgrounds. See the Python Community Code of Conduct .","title":"Code of conduct"},{"location":"contributing/#your-first-contribution","text":"Unsure where to begin contributing to Atom? You can start by looking through these beginner and help-wanted issues: Beginner issues - issues which should only require a few lines of code, and a test or two. Help wanted issues - issues which should be a bit more involved than beginner issues. Both issue lists are sorted by total number of comments. While not perfect, number of comments is a reasonable proxy for impact a given change will have. Working on your first Pull Request? You can learn how from this free series, How to Contribute to an Open Source Project on GitHub . At this point, you're ready to make your changes! Feel free to ask for help; everyone is a beginner at first :smile_cat: If a maintainer asks you to \"rebase\" your PR, they're saying that a lot of code has changed, and that you need to update your branch so it's easier to merge.","title":"Your First Contribution"},{"location":"contributing/#getting-started","text":"For something that is bigger than a one or two line fix: 1. Create your own fork of the code 2. Do the changes in your fork 3. If you like the change and think the project could use it: * Be sure you have followed the code style for the project. * Sign the Contributor License Agreement, CLA, with the jQuery Foundation. * Note the jQuery Foundation Code of Conduct. * Send a pull request indicating that you have a CLA on file.","title":"Getting started"},{"location":"contributing/#how-to-report-a-bug","text":"If you find a security vulnerability, do NOT open an issue. Email security@afrilearn.com instead. If you don\u2019t want to use your personal contact information, set up a \u201csecurity@\u201d email address. Larger projects might have more formal processes for disclosing security, including encrypted communication. (Disclosure: I am not a security expert.) Any security issues should be submitted directly to security@afrilearn.com In order to determine whether you are dealing with a security issue, ask yourself these two questions: * Can I access something that's not mine, or something I shouldn't have access to? * Can I disable something for other people? If the answer to either of those two questions are \"yes\", then you're probably dealing with a security issue. Note that even if you answer \"no\" to both questions, you may still be dealing with a security issue, so if you're unsure, just email us at security@afrilearn.com. When filing an issue, make sure to answer these five questions: What version of Go are you using (go version)? What operating system and processor architecture are you using? What did you do? What did you expect to see? What did you see instead?","title":"How to report a bug"},{"location":"contributing/#how-to-suggest-a-feature-or-enhancement","text":"Our philosophy is to cheap, easy, accessible and personalized learning to students across Africa. We are always looking to improve the user experience on our platform and make education more accessible. Feature enhancement suggestions to help us achieve this goal are welcome and highly appreciated. If you find yourself wishing for a feature that doesn't exist in the Afrilearn e-learning platform, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that Afrilearn e-learning platform has today have been added because our users saw the need. Open an issue on our issues list on GitHub which describes the feature you would like to see, why you need it, and how it should work.","title":"How to suggest a feature or enhancement"},{"location":"contributing/#code-review-process","text":"The core team looks at Pull Requests on a regular basis in a monthly triage meeting that we hold in a public Google Hangout. The hangout is announced in the monthly status updates that are sent to the slack list. Notes are posted to the Slack Community community-triage repo and include a link to a YouTube recording of the hangout. After feedback has been given we expect responses within two weeks. After two weeks we may close the pull request if it isn't showing any activity.","title":"Code review process"}]}